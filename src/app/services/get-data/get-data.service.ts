import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import * as $ from 'jquery';
import {environment as env } from 'src/environments/environment';

@Injectable({
  providedIn: 'root'
})
export class GetDataService {

  constructor() { }
  
  private readonly Observable_data = new BehaviorSubject(undefined);
  getData = this.Observable_data.asObservable();

  countryList:any =
  { 
    'Åland Islands': 248,
    Zimbabwe: 716,
    Zambia: 894,
    Yugoslavia: 891,
    Yemen: 887,
    'Western Sahara': 732,
    'Wallis and Futuna': 876,
    'Virgin Islands': 850,
    'Virgin Islands (British)': 92,
    'Vietnam': 704,
    'Venezuela': 862,
    Vanuatu: 548,
    Uzbekistan: 860,
    Uruguay: 858,
    'United States': 840,
    'United States Minor Outlying Islands': 581,
    'United Kingdom': 826,
    'United Arab Emirates': 784,
    Ukraine: 804,
    Uganda: 800,
    Tuvalu: 798,
    'Turks and Caicos Islands': 796,
    Turkmenistan: 795,
    Turkey: 792,
    Tunisia: 788,
    'Trinidad and Tobago': 780,
    Tonga: 776,
    Tokelau: 772,
    Togo: 768,
    'Timor-Leste': 626,
    Thailand: 764,
    'Tanzania - Mainland': 834,
    Tajikistan: 762,
    'Taiwan- Province of China': 158,
    'Syrian Arab Republic': 760,
    Switzerland: 756,
    Sweden: 752,
    'Svalbard and Jan Mayen': 744,
    Suriname: 740,
    Sudan: 729,
    'State of Palestine': 275,
    'Sri Lanka': 144,
    Spain: 724,
    'South Sudan': 728,
    'South Georgia and the South Sandwich Islands': 239,
    'South Africa': 710,
    Somalia: 706,
    'Solomon Islands': 90,
    Slovenia: 705,
    Slovakia: 703,
    'Sint Maarten (Dutch part)': 534,
    'Sint Maarten': 663,
    Singapore: 702,
    'Sierra Leone': 694,
    Seychelles: 690,
    Serbia: 688,
    Senegal: 686,
    'Saudi Arabia': 682,
    'Sao Tome and Principe': 678,
    'San Marino': 674,
    Samoa: 882,
    'Saint Vincent and the Grenadines': 670,
    'Saint Pierre and Miquelon': 666,
    'Saint Lucia': 662,
    'Saint Kitts and Nevis': 659,
    'Saint Helena- Ascension and Tristan da Cunha': 654,
    'Saint Barthélemy': 652,
    'Réunion': 638,
    Rwanda: 646,
    'Russia': 643,
    Romania: 642,
    'Republic of Moldova': 498,
    'South Korea': 410,
    Qatar: 634,
    'Puerto Rico': 630,
    Portugal: 620,
    Poland: 616,
    Pitcairn: 612,
    Philippines: 608,
    Peru: 604,
    Paraguay: 600,
    'Papua New Guinea': 598,
    Panama: 591,
  Palau: 585,
    Pakistan: 586,
    Oman: 512,
    Norway: 578,
    'Northern Mariana Islands': 580,
    'North Macedonia': 807,
    'North Korea': 408,
    'Norfolk Island': 574,
    Niue: 570,
    Nigeria: 566,
    Niger: 562,
    Nicaragua: 558,
    'New Zealand': 554,
    'New Caledonia': 540,
    Netherlands: 528,
    Nepal: 524,
    Nauru: 520,
    Namibia: 516,
    Myanmar: 104,
    Mozambique: 508,
    Morocco: 504,
    Montserrat: 500,
    Montenegro: 499,
    Mongolia: 496,
    Monaco: 492,
    'Micronesia': 583,
    Mexico: 484,
    Mayotte: 175,
    Mauritius: 480,
    Mauritania: 478,
    Martinique: 474,
    'Marshall Islands': 584,
    Malta: 470,
    Mali: 466,
    Maldives: 462,
    Malaysia: 458,
    Malawi: 454,
    Madagascar: 450,
    Luxembourg: 442,
    Lithuania: 440,
    Liechtenstein: 438,
    Libya: 434,
    Liberia: 430,
    Lesotho: 426,
    Lebanon: 422,
    Latvia: 428,
    'Lao People\'s Democratic Republic': 418,
    Kyrgyzstan: 417,
    Kuwait: 414,
    Kiribati: 296,
    Kenya: 404,
    Kazakhstan: 398,
    Jordan: 400,
    Jersey: 832,
    Japan: 392,
    Jamaica: 388,
    Italy: 380,
    Israel: 376,
    'Isle of Man': 833,
    Ireland: 372,
    Iraq: 368,
    'Iran': 364,
    Indonesia: 360,
    India: 356,
    Iceland: 352,
    Hungary: 348,
    Honduras: 340,
    'Holy See': 336,
    'Heard Island and McDonald Islands': 334,
    Haiti: 332,
    Guyana: 328,
    'Guinea-Bissau': 624,
    Guinea: 324,
    Guernsey: 831,
    Guatemala: 320,
    Guam: 316,
    Guadeloupe: 312,
    Grenada: 308,
    Greenland: 304,
    Greece: 300,
    Gibraltar: 292,
    Ghana: 288,
    Germany: 276,
    Georgia: 268,
    Gambia: 270,
    Gabon: 266,
    'French Southern Territories': 260,
    'French Polynesia': 258,
    'French Guiana': 254,
    France: 250,
    Finland: 246,
    Fiji: 242,
    'Faroe Islands': 234,
    'Falkland Islands': 238,
    'Ethiopia': 231,
    Eswatini: 748,
    Estonia: 233,
    Eritrea: 232,
    'Equatorial Guinea': 226,
    'El Salvador': 222,
    Egypt: 818,
    Ecuador: 218,
    'Dominican Republic': 214,
    Dominica: 212,
    Djibouti: 262,
    Denmark: 208,
    'Ivory Coast': 384,
    Czechia: 203,
    Cyprus: 196,
    'Curaçao': 531,
    Cuba: 192,
    Croatia: 191,
    'Costa Rica': 188,
    'Cook Islands': 184,
    'Congo- Democratic Republic of the': 180,
    Congo: 178,
    Comoros: 174,
    Colombia: 170,
    'Cocos Islands': 166,
    'Christmas Island': 162,
    'China- Macao Special Administrative Region': 446,
    'China- Hong Kong Special Administrative Region': 344,
    China: 156,
    Chile: 152,
    Chad: 148,
    'Central African Republic': 140,
    'Cayman Islands': 136,
    Canada: 124,
    Cameroon: 120,
    Cambodia: 116,
    'Cabo Verde': 132,
    Burundi: 108,
    'Burkina Faso': 854,
    Bulgaria: 100,
    'Brunei Darussalam': 96,
    'British Indian Ocean Territory': 86,
    Brazil: 76,
    'Bouvet Island': 74,
    Botswana: 72,
    'Bosnia and Herzegovina': 70,
    'Bonaire- Sint Eustatius and Saba': 535,
    'Bolivia': 68,
    Bhutan: 64,
    Bermuda: 60,
    Benin: 204,
    Belize: 84,
    Belgium: 56,
    Belarus: 112,
    Barbados: 52,
    Bangladesh: 50,
    Bahrain: 48,
    Bahamas: 44,
    Azerbaijan: 31,
    Austria: 40,
    Australia: 36,
    Aruba: 533,
    Armenia: 51,
    Argentina: 32,
    'Antigua and Barbuda': 28,
    Antarctica: 10,
    Anguilla: 660,
    Angola: 24,
    Andorra: 20,
    'American Samoa': 16,
    Algeria: 12,
    Albania: 8,
    Afghanistan: 4 
  };

tableData:any = [];
tableHeader:any = [];
loadCounter = 0;
selectedGender:any = {name:'Local'};
selectedCurrency:any = {name: 'All'};
selectedRefugee:any = {name: 'Both'};

metricList =[
  "Diseases of the circulatory system",
  "Chestnut-Yield",
  "Blueberries-Yield",
  "Plantains and others-Area harvested",
  "Ginger-Area harvested",
  "Flax fibre and tow-Area harvested",
  "Lupins-Production",
  "Spices nes-Production",
  "Sugar cane-Production",
  "Artichokes-Yield",
  "Lentils-Production",
  "Persimmons-Production",
  "Gooseberries-Production",
  "Bananas-Production",
  "Safflower seed-Yield",
  "Lettuce and chicory-Yield",
  "Canary seed-Production",
  "Oil palm fruit-Production",
  "Blueberries-Production",
  "Sesame seed-Production",
  "Carobs-Production",
  "Hib3 immunization coverage",
  "Raised blood pressure",
  "Imports of goods and services - Constant",
  "Assault",
  "Malignant neoplasm of female breast",
  "Influenza",
  "\"Exposure to smoke",
  "Malignant neoplasms",
  "Fruit tropical fresh nes-Yield",
  "CO2",
  "Hyperplasia of prostate",
  "Chronic lower respiratory diseases",
  "Cranberries-Yield",
  "Cereals nes-Area harvested",
  "Areca nuts-Area harvested",
  "Final consumption expenditure - Constant",
  "CH4",
  "Rice paddy-Area harvested",
  "Vegetables leguminous nes-Yield",
  "Pulses nes-Area harvested",
  "Rice paddy-Yield",
  "Sweet potatoes-Yield",
  "Peas green-Yield",
  "Sisal-Yield",
  "Total refugees and people in refugee-like situations assisted by UNHCR",
  "PFCs",
  "Crude Birth Rate",
  "Cassava leaves-Yield",
  "Fruit Primary-Yield",
  "Canary seed-Yield",
  "Okra-Area harvested",
  "Bastfibres other-Area harvested",
  "Vetches-Area harvested",
  "Soybeans-Yield",
  "NF3",
  "\"Malignant neoplasm of colon",
  "Diseases of the genitourinary system",
  "Chillies and peppers dry-Yield",
  "Cinnamon cannella-Area harvested",
  "Barley-Yield",
  "Kola nuts-Area harvested",
  "Refugees",
  "Certain infectious and parasitic diseases",
  "Malignant neoplasm of pancreas",
  "Japanese Encephalitis",
  "Malnutrition",
  "Diseases of the nervous system",
  "Raspberries-Yield",
  "Asparagus-Area harvested",
  "Refugees assisted by UNHCR",
  "Certain conditions originating in the perinatal period",
  "Intentional self-harm",
  "\"Malignant neoplasm of lymphoid",
  "GROSS DOMESTIC PRODUCT - current",
  "Imports of goods and services - current",
  "Rye-Yield",
  "Tuberculosis",
  "Diseases of the digestive system",
  "Population using solid fuels",
  "Carobs-Yield",
  "Yams-Area harvested",
  "Millet-Area harvested",
  "Figs-Yield",
  "MatÃ©-Yield",
  "Rye-Production",
  "Lettuce and chicory-Production",
  "Whooping cough",
  "Pigeon peas-Production",
  "Meningococcal infection",
  "Currants-Yield",
  "Carrots and turnips-Yield",
  "Transport accidents",
  "Garlic-Production",
  "Prevelance of condom use during higher-risk sex",
  "Measles",
  "HFCs",
  "Berries nes-Area harvested",
  "Other direct obstetric causes",
  "Chick peas-Area harvested",
  "Disorders of kidney and ureter",
  "\"Malignant neoplasm of trachea",
  "Gross capital formation - Constant",
  "Malignant neoplasm of liver and intrahepatic bile ducts",
  "Agave fibres nes-Area harvested",
  "Lentils-Area harvested",
  "Oilseeds nes-Yield",
  "Dates-Area harvested",
  "Hazelnuts with shell-Area harvested",
  "Sugar Crops Primary-Production",
  "Cherries sour-Area harvested",
  "Safflower seed-Area harvested",
  "Malignant neoplasm of prostate",
  "Private expenditure on health as a percentage of total expenditure on health",
  "\"Endocrine",
  "Persimmons-Yield",
  "Jute-Yield",
  "Tomatoes-Yield",
  "Artichokes-Area harvested",
  "Final consumption expenditure - current",
  "outbound",
  "Exports of goods and services - Constant",
  "Ramie-Area harvested",
  "Viral hepatitis",
  "Accidental drowning and submersion",
  "Yautia cocoyam-Area harvested",
  "\"Symptoms",
  "Tetanus",
  "Manila fibre abaca-Area harvested",
  "Pulses nes-Production",
  "Tallowtree seed-Production",
  "Pneumonia",
  "Pistachios-Production",
  "Melonseed-Area harvested",
  "Melons other inc-Area harvested",
  "Treenuts Total-Yield",
  "Maize green-Production",
  "Chillies and peppers green-Yield",
  "Peas dry-Area harvested",
  "Vetches-Production",
  "Watermelons-Production",
  "Fruit citrus nes-Yield",
  "Soybeans-Area harvested",
  "Accidental poisoning by and exposure to noxious substances",
  "Leeks other alliaceous vegetables-Area harvested",
  "N2O",
  "Fruit pome nes-Area harvested",
  "Mental and behavioural disorders",
  "Diseases of the respiratory  system",
  "Jojoba seed-Area harvested",
  "Chicory roots-Yield",
  "Canary seed-Area harvested",
  "Fonio-Area harvested",
  "Falls",
  "Pears-Production",
  "Coffee green-Area harvested",
  "Lentils-Yield",
  "Grapefruit inc-Area harvested",
  "Millet-Production",
  "Sugar cane-Area harvested",
  "Hemp tow waste-Production",
  "Mushrooms and truffles-Yield",
  "Pears-Yield",
  "Lettuce and chicory-Area harvested",
  "Carobs-Area harvested",
  "Oil palm fruit-Area harvested",
  "Fruit citrus nes-Area harvested",
  "Cow peas dry-Area harvested",
  "Agave fibres nes-Production",
  "Castor oil seed-Area harvested",
  "All other diseases",
  "Fruit Primary-Production",
  "Manila fibre abaca-Yield",
  "Apricots-Area harvested",
  "Mangoes mangosteens guavas-Area harvested",
  "Karite nuts sheanuts-Area harvested",
  "Roots and Tubers Total-Yield",
  "Asparagus-Production",
  "Melons other inc-Yield",
  "Oranges-Production",
  "Grapes-Yield",
  "Anise badian fennel coriander-Yield",
  "Groundnuts with shell-Yield",
  "Quinoa-Production",
  "Maize green-Area harvested",
  "Olives-Yield",
  "Quinces-Production",
  "Tangerines mandarins clementines satsumas-Yield",
  "Citrus Fruit Total-Yield",
  "Bananas-Yield",
  "Cassava-Production",
  "Diseases of the musculoskeletal system and connective tissue",
  "Artichokes-Production",
  "Nutmeg mace and cardamoms-Production",
  "Chicory roots-Production",
  "Children with ARI symptoms antibiotic treatment",
  "Mortality Rate All Causes",
  "Number of laboratory health workers",
  "\"Congenital malformations",
  "Cloves-Production",
  "Fibre crops nes-Yield",
  "Beans dry-Production",
  "Karite nuts sheanuts-Yield",
  "Intestinal infectious diseases",
  "Bananas-Area harvested",
  "Kola nuts-Yield",
  "Quinoa-Yield",
  "Eggplants aubergines-Area harvested",
  "Pyrethrum dried-Yield",
  "Pepper piper spp-Area harvested",
  "Chillies and peppers dry-Area harvested",
  "Cucumbers and gherkins-Area harvested",
  "Quinoa-Area harvested",
  "Poppy seed-Area harvested",
  "Grapes-Area harvested",
  "Chillies and peppers green-Area harvested",
  "Cassava leaves-Production",
  "Pistachios-Area harvested",
  "BCG Immunization",
  "Social security expenditure on health as a percentage of general government expenditure on health",
  "Oilseeds nes-Production",
  "Treatment success rate for new pulmonary smear-negative and extrapulmonary tuberculosis cases",
  "Sesame seed-Area harvested",
  "Coconuts-Area harvested",
  "Lemons and limes-Area harvested",
  "Oranges-Yield",
  "Wheat-Area harvested",
  "Cassava leaves-Area harvested",
  "Blueberries-Area harvested",
  "Walnuts with shell-Area harvested",
  "Fonio-Yield",
  "Broad beans horse beans dry-Production",
  "Pineapples-Yield",
  "Almonds with shell-Yield",
  "Lemons and limes-Production",
  "Oats-Production",
  "Oilcrops Oil Equivalent-Yield",
  "Carrots and turnips-Area harvested",
  "Leeks other alliaceous vegetables-Yield",
  "Sugar Crops Primary-Area harvested",
  "Vanilla-Production",
  "Coconuts-Production",
  "Taro cocoyam-Yield",
  "Vegetables fresh nes-Production",
  "Almonds with shell-Area harvested",
  "Vegetables fresh nes-Area harvested",
  "Papayas-Area harvested",
  "Tangerines mandarins clementines satsumas-Production",
  "Apricots-Production",
  "Contraceptive Prevalence",
  "Spinach-Production",
  "Mushrooms and truffles-Production",
  "Olives-Area harvested",
  "Castor oil seed-Yield",
  "Potatoes-Yield",
  "Grain mixed-Yield",
  "Homicide",
  "Sunflower seed-Production",
  "Chick peas-Yield",
  "Nuts nes-Production",
  "Bambara beans-Area harvested",
  "Peppermint-Production",
  "Vanilla-Area harvested",
  "Spices nes-Yield",
  "Bastfibres other-Production",
  "Apricots-Yield",
  "Millet-Yield",
  "Cauliflowers and broccoli-Production",
  "Ginger-Production",
  "Cashewapple-Yield",
  "DTP3 immunization coverage",
  "Roots and tubers nes-Yield",
  "Buckwheat-Yield",
  "Maize-Yield",
  "Melons other inc-Production",
  "Number of dental technician assistants",
  "Sugar crops nes-Yield",
  "Pertussis",
  "Anaemias",
  "Number of laboratory technician assistants",
  "Cucumbers and gherkins-Yield",
  "\"Diseases of arteries",
  "Population Median Age",
  "Preterm birth rate",
  "Septicaemia",
  "Groundnuts with shell-Area harvested",
  "Okra-Yield",
  "Jute-Production",
  "Onions shallots green-Yield",
  "Healthy life expectancy",
  "Mumps",
  "Gross capital formation - current",
  "Number of community and traditional health workers",
  "Births by Caesarean Section",
  "Number of personal care workers",
  "Children with ARI symptoms taken to health facility",
  "Children received vitamin A suppliementation",
  "Number of <5 deaths",
  "Oilcrops-Area harvested",
  "Number of pharmacists",
  "Accidents",
  "Sesame seed-Yield",
  "Oilcrops Cake Equivalent-Area harvested",
  "Peaches and nectarines-Area harvested",
  "Apples-Area harvested",
  "Citrus Fruit Total-Area harvested",
  "MatÃ©-Area harvested",
  "Years of Life lost Communicable",
  "Tangerines mandarins clementines satsumas-Area harvested",
  "Pulses Total-Area harvested",
  "Chestnut-Area harvested",
  "Fruit pome nes-Yield",
  "Areca nuts-Yield",
  "Sugar beet-Area harvested",
  "Maize-Area harvested",
  "Potatoes-Area harvested",
  "Oats-Area harvested",
  "Garlic-Yield",
  "Pulses Total-Production",
  "Cherries-Production",
  "Pigeon peas-Yield",
  "Rubber natural-Area harvested",
  "Seed cotton-Area harvested",
  "Population Proportion over 60",
  "Malignant neoplasm of cervix uteri",
  "Buckwheat-Area harvested",
  "Human immunodeficiency virus [HIV] disease",
  "Malignant neoplasm of stomach",
  "Spinach-Area harvested",
  "Quinces-Area harvested",
  "Rubber natural-Yield",
  "Ginger-Yield",
  "Jute-Area harvested",
  "Figs-Area harvested",
  "Beans green-Area harvested",
  "Peas dry-Production",
  "Sisal-Area harvested",
  "Almonds with shell-Production",
  "Sugar crops nes-Production",
  "Hempseed-Production",
  "Fruit fresh nes-Production",
  "Hempseed-Yield",
  "Tea-Yield",
  "Spices nes-Area harvested",
  "Mustard seed-Yield",
  "Oilcrops Oil Equivalent-Area harvested",
  "Cherries sour-Production",
  "Population Proportion under 15",
  "Sugar beet-Yield",
  "Buckwheat-Production",
  "Cinnamon cannella-Yield",
  "Poppy seed-Yield",
  "Wheat-Yield",
  "Barley-Area harvested",
  "Vegetables fresh nes-Yield",
  "Cloves-Yield",
  "Cherries sour-Yield",
  "Grapefruit inc-Yield",
  "Gums natural-Production",
  "Cereals nes-Production",
  "Yams-Yield",
  "Avocados-Production",
  "Sugar Crops Primary-Yield",
  "Raspberries-Production",
  "Barley-Production",
  "Oil palm fruit-Yield",
  "Triticale-Area harvested",
  "Flax fibre and tow-Yield",
  "Sunflower seed-Area harvested",
  "Oranges-Area harvested",
  "Berries nes-Yield",
  "Figs-Production",
  "Annual Population Growth Rate",
  "Kapok fruit-Area harvested",
  "Cellular Subscribers",
  "General government expenditure on health as a percentage of total government expenditure",
  "Sorghum-Production",
  "Gooseberries-Area harvested",
  "Tobacco unmanufactured-Production",
  "Fruit fresh nes-Yield",
  "String beans-Production",
  "Stunted children",
  "Crude Death Rate",
  "Infants exclusively breastfed",
  "Rye-Area harvested",
  "Mortality Rate Communicable",
  "Rapeseed-Area harvested",
  "Brazil nuts with shell-Area harvested",
  "Eggplants aubergines-Yield",
  "Tung nuts-Area harvested",
  "Pyrethrum dried-Area harvested",
  "Cranberries-Area harvested",
  "Plantains and others-Yield",
  "Mangoes mangosteens guavas-Production",
  "Cashewapple-Production",
  "Cinnamon cannella-Production",
  "Kiwi fruit-Yield",
  "Beans green-Yield",
  "Fruit stone nes-Production",
  "Cassava-Area harvested",
  "Ischaemic heart diseases",
  "Broad beans horse beans dry-Area harvested",
  "Mustard seed-Area harvested",
  "Cereals Total-Production",
  "Bambara beans-Yield",
  "Onions shallots green-Area harvested",
  "Gooseberries-Yield",
  "Cereals nes-Yield",
  "Onions dry-Yield",
  "Kiwi fruit-Area harvested",
  "Nutmeg mace and cardamoms-Yield",
  "Roots and tubers nes-Production",
  "Yautia cocoyam-Production",
  "Soybeans-Production",
  "Broad beans horse beans dry-Yield",
  "Cashew nuts with shell-Production",
  "Onions shallots green-Production",
  "Cucumbers and gherkins-Production",
  "MCV immunization coverage",
  "Number of infant deaths",
  "Pharmaceutical personnel density",
  "Raised fasting blood glucose",
  "Unmet need for family planning",
  "Papayas-Production",
  "Years of Life Lost Noncommunicable",
  "Disorders of the blood and blood-forming organs and certain disorders involving the immune mec  ICD9",
  "Garlic-Area harvested",
  "Number of neonatal deaths",
  "Tea-Area harvested",
  "Anise badian fennel coriander-Area harvested",
  "Taro cocoyam-Production",
  "Dates-Yield",
  "Mortality rate",
  "Exports of goods and services - current",
  "General government expenditure on health as a percentage of total expenditure on health",
  "Cow peas dry-Yield",
  "Pineapples-Area harvested",
  "Melonseed-Yield",
  "Mental hospitals",
  "Strawberries-Area harvested",
  "Oilcrops Cake Equivalent-Yield",
  "Kapok fruit-Production",
  "Sisal-Production",
  "Sugar cane-Yield",
  "Cocoa beans-Yield",
  "Rapeseed-Production",
  "Sugar crops nes-Area harvested",
  "Jojoba seed-Production",
  "Malignant neoplasm of oesophagus",
  "Dates-Production",
  "MatÃ©-Production",
  "Obese Adults",
  "External resources for health as a percentage of total expenditure on health",
  "Hypertensive diseases",
  "Number of nursing and midwifery personnel",
  "Prevelance of tuberculosis",
  "GDP - Constant",
  "Neoplasms",
  "Cocoa beans-Area harvested",
  "\"Pregnancy",
  "Melonseed-Production",
  "Mustard seed-Production",
  "Diphtheria",
  "Strawberries-Yield",
  "Pregnancy with abortive outcome",
  "Diseases of the liver",
  "Jojoba seed-Yield",
  "Ramie-Production",
  "Cabbages and other brassicas-Production",
  "Linseed-Area harvested",
  "Rice paddy rice milled equivalent-Production",
  "String beans-Area harvested",
  "Pears-Area harvested",
  "Persimmons-Area harvested",
  "Nutmeg mace and cardamoms-Area harvested",
  "Vegetables leguminous nes-Area harvested",
  "Oilseeds nes-Area harvested",
  "Cashew nuts with shell-Area harvested",
  "Beans dry-Yield",
  "All other external causes",
  "Pumpkins squash and gourds-Yield",
  "H5N1 Influenza",
  "Pineapples-Production",
  "Incidence of TB",
  "Tea-Production",
  "POL3 immunization coverage",
  "Total expenditure on health as a percentage of gdp",
  "Pepper piper spp-Yield",
  "Tuberculosis new and relapse cases",
  "Treenuts Total-Production",
  "Coffee green-Yield",
  "Currants-Production",
  "Vegetables Primary-Area harvested",
  "Cabbages and other brassicas-Yield",
  "Watermelons-Area harvested",
  "Brazil nuts with shell-Yield",
  "Coir-Production",
  "Fruit fresh nes-Area harvested",
  "Coffee green-Production",
  "Berries nes-Production",
  "Pulses Total-Yield",
  "Diptheria",
  "Fibre Crops Primary-Production",
  "Fonio-Production",
  "Papayas-Yield",
  "Oilcrops-Production",
  "Vegetables Primary-Yield",
  "TB Deaths HIV-neg",
  "Plums and sloes-Area harvested",
  "Grapefruit inc-Production",
  "Kiwi fruit-Production",
  "Apples-Production",
  "Peaches and nectarines-Yield",
  "Cranberries-Production",
  "Sunflower seed-Yield",
  "Castor oil seed-Production",
  "Lemons and limes-Yield",
  "Overweight Children",
  "Bastfibres other-Yield",
  "Smear-positive TB treatment success rate",
  "Peppermint-Yield",
  "Fruit stone nes-Yield",
  "inbound",
  "Chestnut-Production",
  "Total refugees and people in refugee-like situations",
  "Acute rheumatic fever and chronic rheumatic heart diseases",
  "Acute poliomyelitis",
  "Olives-Production",
  "Tung nuts-Yield",
  "Apples-Yield",
  "Chillies and peppers dry-Production",
  "Peas green-Production",
  "Fruit tropical fresh nes-Production",
  "All causes",
  "Gastric and duodenal ulcer",
  "Cauliflowers and broccoli-Yield",
  "Linseed-Yield",
  "Ill-defined Causes in Cause-of-death Registration",
  "Maize green-Yield",
  "Strawberries-Production",
  "Hospital beds",
  "Triticale-Production",
  "Literacy rate among 15 year olds",
  "Number of traditional birth attendants",
  "Rubella",
  "Leeks other alliaceous vegetables-Production",
  "Fibre crops nes-Area harvested",
  "Vegetables Primary-Production",
  "Number of dentists",
  "Number of medical assistants",
  "Number of pharmaceutical technician assistants",
  "Malaria",
  "Onions dry-Area harvested",
  "Raspberries-Area harvested",
  "Chicory roots-Area harvested",
  "Fruit Primary-Area harvested",
  "Roots and Tubers Total-Area harvested",
  "Fruit tropical fresh nes-Area harvested",
  "Fibre Crops Primary-Yield",
  "Cashew nuts with shell-Yield",
  "Cashewapple-Area harvested",
  "Oilcrops-Yield",
  "Poppy seed-Production",
  "Pepper piper spp-Production",
  "Quinces-Yield",
  "Tobacco unmanufactured-Yield",
  "Kola nuts-Production",
  "Potatoes-Production",
  "Bambara beans-Production",
  "Vetches-Yield",
  "Yautia cocoyam-Yield",
  "Seed cotton-Yield",
  "Hazelnuts with shell-Yield",
  "Agave fibres nes-Yield",
  "Pulses nes-Yield",
  "Maize-Production",
  "Environmental and public health workers density",
  "Nuts nes-Yield",
  "Laboratory health workers density",
  "Leprosy",
  "Mortality Rate Cancer",
  "Number of physicians",
  "Population Living in Urban Areas",
  "Sorghum-Yield",
  "Mortality Rate Chronic Respiratory Conditions",
  "Vanilla-Yield",
  "Fibre crops nes-Production",
  "Sweet potatoes-Production",
  "Oilcrops Oil Equivalent-Production",
  "Community and traditional health workers density",
  "Congenital Rubella Syndrome",
  "Mortality Rate Cardiovasular disease and diabetes",
  "Total density computed tomography units",
  "Hempseed-Area harvested",
  "Yellow Fever",
  "Onions dry-Production",
  "Walnuts with shell-Yield",
  "Oilcrops Cake Equivalent-Production",
  "Fruit pome nes-Production",
  "Disorders of the blood and blood-forming organs and certain disorders involving the immune mec ICD10",
  "Cherries-Area harvested",
  "Health management and support workers density",
  "Cerebrovascular diseases",
  "Sweet potatoes-Area harvested",
  "Beans dry-Area harvested",
  "Cabbages and other brassicas-Area harvested",
  "Indirect obstetric causes",
  "\"Malignant neoplasm of lip",
  "Nuts nes-Area harvested",
  "Mortality Rate Noncommunicable",
  "Plums and sloes-Yield",
  "Cherries-Yield",
  "Cholera",
  "Spinach-Yield",
  "Other health workers density",
  "Number of community health workers",
  "External causes",
  "Mortality Rate Injuries",
  "Cauliflowers and broccoli-Area harvested",
  "Neonatal mortality rate",
  "Avocados-Yield",
  "Number of nursing personnel",
  "Triticale-Yield",
  "Number of radiographers",
  "Poliomyelitis",
  "Total Fertility Rate ",
  "Lupins-Yield",
  "Diabetes mellitus",
  "Mangoes mangosteens guavas-Yield",
  "Peppermint-Area harvested",
  "Nursing and midwifery personnel density",
  "Tallowtree seed-Yield",
  "Sugar beet-Production",
  "Vegetables leguminous nes-Production",
  "Ramie-Yield",
  "Years of Life Lost Injuries",
  "Hops-Area harvested",
  "Number of environment and public health workers",
  "Peas green-Area harvested",
  "Rapeseed-Yield",
  "Taro cocoyam-Area harvested",
  "Sorghum-Area harvested",
  "String beans-Yield",
  "Roots and Tubers Total-Production",
  "Safflower seed-Production",
  "Plums and sloes-Production",
  "Plantains and others-Production",
  "Pigeon peas-Area harvested",
  "Walnuts with shell-Production",
  "Fruit stone nes-Area harvested",
  "Number of other health workers",
  "Manila fibre abaca-Production",
  "Number of traditional medicine practitioners",
  "Grain mixed-Area harvested",
  "Areca nuts-Production",
  "Rice paddy rice milled equivalent-Area harvested",
  "Beans green-Production",
  "Asparagus-Yield",
  "Hemp tow waste-Yield",
  "Wheat-Production",
  "Watermelons-Yield",
  "Citrus Fruit Total-Production",
  "Tobacco unmanufactured-Area harvested",
  "Peas dry-Yield",
  "Hazelnuts with shell-Production",
  "Pistachios-Yield",
  "Cassava-Yield",
  "Cloves-Area harvested",
  "Roots and tubers nes-Area harvested",
  "Oats-Yield",
  "Hops-Yield",
  "Hemp tow waste-Area harvested",
  "Lupins-Area harvested",
  "Linseed-Production",
  "Hops-Production",
  "Anise badian fennel coriander-Production",
  "Number of dentistry personnel",
  "Yams-Production",
  "Psychiatrists working in mental health sector",
  "Carrots and turnips-Production",
  "Cow peas dry-Production",
  "Currants-Area harvested",
  "Chillies and peppers green-Production",
  "Mushrooms and truffles-Area harvested",
  "Rice paddy-Production",
  "Grapes-Production",
  "Avocados-Area harvested",
  "Tomatoes-Area harvested",
  "Fibre Crops Primary-Area harvested",
  "Groundnuts with shell-Production",
  "Kapok fruit-Yield",
  "Tung nuts-Production",
  "Flax fibre and tow-Production",
  "Karite nuts sheanuts-Production",
  "Eggplants aubergines-Production",
  "Number of midwifery personnel",
  "Underweight children",
  "Children Diarrhoea receiving ORT",
  "Dentistry personnel density",
  "Number of health management and support workers",
  "Plague",
  "Stillbirth rate",
  "Tallowtree seed-Area harvested",
  "Treenuts Total-Area harvested",
  "Cereals Total-Area harvested",
  "Pumpkins squash and gourds-Area harvested",
  "Peaches and nectarines-Production",
  "Tomatoes-Production",
  "Rubber natural-Production",
  "Cereals Total-Yield",
  "Okra-Production",
  "Chick peas-Production",
  "Pumpkins squash and gourds-Production",
  "Brazil nuts with shell-Production",
  "Grain mixed-Production",
  "Fruit citrus nes-Production",
  "Pyrethrum dried-Production",
  "Hepatitis B immunization coverage",
  "Number of laboratory scientists",
  "Number of pharmaceutical personnel",
  "Private prepaid plans as a percentage of private expenditure on health",
  "Total density radiotherapy units",
  "Treatment success rate for retreatment tuberculosis cases",
  "Coconuts-Yield",
  "Seed cotton-Production",
  "Cocoa beans-Production",
  "Out-of-pocket expenditure as a percentage of private expenditure on health",
  "Physicians density ",
  "Population"
];

refugeeMetrics = [
'Refugees',
'Refugees assisted by UNHCR',
'Total refugees and people in refugee-like situations',
'Total refugees and people in refugee-like situations assisted by UNHCR',

]

currencyMetcis = [
  'Exports of goods and services - current',
  'Final consumption expenditure - current', 
  'GROSS DOMESTIC PRODUCT - current',
  'Gross capital formation - current',
  'Imports of goods and services - current',

]

GenderMetrics = [
'Homicide',
'Certain infectious and parasitic diseases',
'Intestinal infectious diseases',
'Tuberculosis',
'Tetanus',
'Diphtheria',
'Whooping cough',
'Meningococcal infection',
'Septicaemia',
'Acute poliomyelitis',
'Measles',
'Viral hepatitis',
'Human immunodeficiency virus HIV disease',
'Malaria',
'Neoplasms',
'Malignant neoplasms',
'Malignant neoplasm of lip, oral cavity and pharynx',
'Malignant neoplasm of oesophagus',
'Malignant neoplasm of stomach',
'Malignant neoplasm of colon, rectosigmoid junction, rectum, anus and anal canal',
'Malignant neoplasm of liver and intrahepatic bile ducts',
'Malignant neoplasm of pancreas',
'Malignant neoplasm of trachea, bronchus and lung',
'Malignant neoplasm of prostate',
'Malignant neoplasm of lymphoid, haematopoietic and related tissue',
'Disorders of the blood and blood-forming organs and certain disorders involving the immune mec ICD10',
'Anaemias',
'Endocrine, nutritional and metabolic diseases',
'Diabetes mellitus',
'Malnutrition',
'Mental and behavioural disorders',
'Diseases of the nervous system',
'Diseases of the circulatory system',
'Acute rheumatic fever and chronic rheumatic heart diseases',
'Hypertensive diseases',
'Ischaemic heart diseases',
'Cerebrovascular diseases',
'Diseases of arteries, arterioles and capillaries',
'Diseases of the respiratory  system',
'Influenza',
'Pneumonia',
'Chronic lower respiratory diseases',
'Diseases of the digestive system',
'Gastric and duodenal ulcer',
'Diseases of the liver',
'Diseases of the musculoskeletal system and connective tissue',
'Diseases of the genitourinary system',
'Disorders of kidney and ureter',
'Hyperplasia of prostate',
'Certain conditions originating in the perinatal period',
'Congenital malformations, deformations and chromosomal abnormalities', 
'Symptoms, signs and abnormal clinical and laboratory findings, not elsewhere classified',
'All other diseases',
'External causes',
'Accidents',
'Transport accidents',
'Falls',
'Accidental drowning and submersion',
'Exposure to smoke, fire and flames',
'Accidental poisoning by and exposure to noxious substances',
'Intentional self-harm',
'Assault',
'All other external causes',
'All causes',
'Malignant neoplasm of female breast',
'Malignant neoplasm of cervix uteri',
'Pregnancy, childbirth and the puerperium',
'Pregnancy with abortive outcome',
'Other direct obstetric causes',
'Indirect obstetric causes',
'Disorders of the blood and blood-forming organs and certain disorders involving the immune mec  ICD9',

]

  selectedCountries = [];
  selectedMetices = [];
  yearRange = [2012,2013];

  token = env.token;
  corsBypass = env.corsBypass;
  serverURL = env.serverUrl;
  generalizedURL = env.generalizedURL;
  genederURL = env.genederURL;
  currencyURL =env.currencyURL;
  RefugeeURL = env.RefugeeURL;

  setData(data:any){
    this.Observable_data.next(data);
  }

  loadData =  this.debounce(() => {
    const _country = this.selectedCountries;
    if(this.selectedMetices.length>0){
        const _metricGender  = this.selectedMetices.filter(item => this.GenderMetrics.includes(item));
        const _metricCurrency  = this.selectedMetices.filter(item => this.currencyMetcis.includes(item));
        const _metricRefugee  = this.selectedMetices.filter(item => this.refugeeMetrics.includes(item));
        const _metricGeneral  = this.selectedMetices.filter(item => 
          !_metricGender.includes(item) &&
          !_metricCurrency.includes(item) &&
          !_metricRefugee.includes(item)
        );
        const _yearList:number[] = [];
        for(let i = this.yearRange[0]; i <= this.yearRange[1]; i++){
          _yearList.push(i);
        } 
        const _generalURL = this.getGeneralURL(_metricGeneral, this.selectedGender.name);
        const _currencyURL = this.getCurrencyURL(_metricCurrency , this.selectedCurrency.name);
        const _refugeeURL = this.getRefugeeURL(_metricRefugee , this.selectedRefugee.name);
        const _genderURL = this.getGenederURL(_metricGender, this.selectedGender.name);

        const validUrls:any = [];
        if(_generalURL){
          validUrls.push(_generalURL);
        }
        if(_genderURL){
          validUrls.push(_genderURL);
        }
        if(_currencyURL){
          validUrls.push(_currencyURL);
        }
        if(_refugeeURL){
          validUrls.push(_refugeeURL);
        }

        validUrls.forEach((item:any,i:number) => {
          _country.forEach(code => validUrls[i] = validUrls[i] + `&country=${code}&country.type=Country`);
          _yearList.forEach(year =>  validUrls[i] = validUrls[i] + `&years=${year}`);
        });

        this.getAllData(validUrls);
    } else {
      this.tableData = [];
      this.tableHeader = [];
      this.setData({tableData:this.tableData,tableHeader:this.tableHeader});
    }
  });

  private async fetchData(url:string, token:string = this.token) {
    console.log(url);

    $('.loaderWrapper').fadeIn();
    this.loadCounter+=1;
    let data;
    if(env.enableCorsServer){
      data = await (await fetch(this.corsBypass,{
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body:JSON.stringify({ url, token}),
      })).json();
    } else {

      if(env.addToken){
        data = await (await fetch(url,{
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`,
          },
        })).json();
      } else {
        data = await (await fetch(url,{
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
        })).json();
      }
     
    }
    
    this.loadCounter-=1;
    if(this.loadCounter ==0){
      $('.loaderWrapper').fadeOut();
    }
    return data;
  }


  getGeneralURL(metricList:any , gender:string){
    if(metricList.length>0){
        let _url = this.serverURL + this.generalizedURL;
        metricList.forEach((metric:any) => _url = _url + `&mets=${metric}&mets.type=Metric_Type`);
        _url = _url.replace('?&', '?');
        // _url = _url + `&gender=${gender}`;
        return _url;
    } else {
      return null;
    }
  }

  getRefugeeURL(metricList:any, refugee:string){
    if(metricList.length>0){
      let _url = this.serverURL + this.RefugeeURL;
      metricList.forEach((metric:any) => _url = _url + `&mets=${metric}&mets.type=Metric_Type`);
      _url = _url.replace('?&', '?');
      _url = _url + `&direction=${refugee}`;
      return _url;
    } else {
      return null;
    }

  }

  getCurrencyURL(metricList:any , currency:string){
    if(metricList.length>0){
      let _url = this.serverURL + this.currencyURL;
      metricList.forEach((metric:any) => _url = _url + `&mets=${metric}&mets.type=Metric_Type`);
      _url = _url.replace('?&', '?');
      if(currency !== 'Local'){
        _url = _url + `&convertTo=${currency}`;
      }
      return _url;
    } else {
      return null;
    }

  }

  getGenederURL(metricList:any,  gender:string){

    if(metricList.length>0){
      let _url = this.serverURL + this.genederURL;
      metricList.forEach((metric:any) => _url = _url + `&mets=${metric}&mets.type=Metric_Type`);
      _url = _url.replace('?&', '?');
      _url = _url + `&gendertype=${gender}`
      return _url;
    } else {
      return null;
    }
  }

  async getAllData(urlList:any){
    Promise.all(urlList.map((x:string) => this.fetchData(x))).then((data:any) =>{
      let finalData:any = [];
      data.forEach((item:any) => {
        let _data = item?.data?.results[0] || null;
        if(_data){
          _data =  _data["@@test_tuple"] || null;
        }
        finalData = finalData.concat(_data || []);
      });
      this.parseData_newSchema(finalData);
    });
     

  }
 
  debounce(cb:any, delay = 700) {
    let timeout:any;
    return (...args:any) => {
      clearTimeout(timeout) 
      timeout = setTimeout(() => {
        cb(...args)
      }, delay)
    }
  } 

  

  parseData_newSchema(data:any){
    const dataOBJ:any = {};
    data.forEach((item:any)=>{
      if(!dataOBJ[`${item.countryname}_${item.yearReported}`]){
        dataOBJ[`${item.countryname}_${item.yearReported}`] = {
          country: item.countryname,
          countryCode: item.countrycode,
          year: item.yearReported,
          data: [
            {
              metric: item.metricName,
              value: item.MetricValue,
            }
          ],
        };

        dataOBJ[`${item.countryname}_${item.yearReported}`][item.metricName] = item.MetricValue;
      } else {
        dataOBJ[`${item.countryname}_${item.yearReported}`].data.push({
          metric: item.metricName,
          value: item.MetricValue,
        });
        dataOBJ[`${item.countryname}_${item.yearReported}`][item.metricName] = item.MetricValue;
      }
    });

    this.tableData = Object.values(dataOBJ);
    this.tableHeader = [
        {name:"country"},
        {name:"year"},
    ]
    this.selectedMetices.forEach(x => {
        this.tableHeader.push({name:x});
    })

    
    this.setData({tableData:this.tableData,tableHeader:this.tableHeader});
  }
}
